name: Build & Deploy BadLab
on: workflow_dispatch

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION:           ${{ vars.AWS_REGION }}
  AWS_ROLE_TO_ASSUME:   ${{ vars.AWS_ROLE_TO_ASSUME }}
  ARTIFACT_BUCKET:      ${{ vars.ARTIFACT_BUCKET }}
  STACK_NAME:           ${{ vars.STACK_NAME }}
  PUBLIC_BUCKET_NAME:   ${{ vars.PUBLIC_BUCKET_NAME }}

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ vars.AWS_REGION || 'ap-southeast-2' }}

      - name: Show repo tree
        run: |
          find . -maxdepth 3 -type f | sort

      # -------- Build vulnerable LAYER only (no function zip) --------
      - name: Build vulnerable layer (py39)
        run: |
          set -euo pipefail
          docker build -t badlab-py39 layers/vuln-py39
          mkdir -p layers/vuln-py39/build

          docker run --rm \
            --entrypoint /bin/bash \
            -v "$PWD":/work \
            -w /opt \
            badlab-py39 -lc '
              set -euo pipefail
              cp /work/layers/vuln-py39/requirements.lock.txt /opt/requirements.lock.txt
              python3 -m pip install --upgrade pip
              pip install --no-cache-dir -r /opt/requirements.lock.txt -t /opt/python
              zip -r /opt/vuln-py39-layer.zip python >/dev/null
              cp /opt/vuln-py39-layer.zip /work/layers/vuln-py39/build/vuln-py39-layer.zip
            '

      - name: Upload layer to S3 (capture VersionId)
        id: upload_layer
        run: |
          set -euo pipefail
          LAYER_KEY="layers/vuln-py39-layer.zip"
          aws s3api put-object \
            --bucket "${ARTIFACT_BUCKET}" \
            --key "${LAYER_KEY}" \
            --body "layers/vuln-py39/build/vuln-py39-layer.zip" \
            >/tmp/put-layer.json

          LAYER_VERSION_ID=$(aws s3api head-object \
            --bucket "${ARTIFACT_BUCKET}" \
            --key "${LAYER_KEY}" \
            --query VersionId --output text || true)

          echo "LAYER_S3_KEY=${LAYER_KEY}"       | tee -a "$GITHUB_ENV"
          echo "LAYER_VERSION_ID=${LAYER_VERSION_ID}" | tee -a "$GITHUB_ENV"

      - name: Deploy CloudFormation
        run: |
          set -euo pipefail
          aws cloudformation deploy \
            --stack-name "${STACK_NAME}" \
            --template-file infra/plerion-badlab.yaml \
            --capabilities CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND \
            --parameter-overrides \
              PublicBucketName="${PUBLIC_BUCKET_NAME}" \
              ArtifactBucket="${ARTIFACT_BUCKET}" \
              VulnLayerKey="${LAYER_S3_KEY}" \
              LambdaRuntime="python3.9" \
            --no-fail-on-empty-changeset

      - name: Show outputs
        run: |
          aws cloudformation describe-stacks \
            --stack-name "${STACK_NAME}" \
            --query "Stacks[0].Outputs" \
            --output table
